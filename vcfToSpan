#!/usr/bin/perl

use strict;
use warnings;

use Pod::Usage;
use Getopt::Long;
use Bio::DB::Sam;
use Bio::Seq::Quality;
use lib "$ENV{HOME}/insertag";

use constant BASEQUALITY => 33;

my $bamfile; 
my $vcffile;
my $ichr;
my $istart;
my $iend;
my $size=10000;
my $range=0;
my $min=5;

GetOptions(
        'bam|b=s' => \$bamfile,
	'vcf|v=s' => \$vcffile,
	'range|r=i' => \$range,
	'size|s=i'=> \$size,
	'min|m=i' => \$min
);

my $bam = Bio::DB::Sam -> new ($bamfile);
our $header = $bam -> header;

open(VCF,"<$vcffile");
while(<VCF>){
	my $line=$_;
	chomp $line;
	if($line=~/^#/){next;}
	my @vcf=split(/\t/,$_);
	my $chr=$vcf[0];
	my $start=$vcf[1];
	my $end=$vcf[10];
	my $left=$start;
	my $right=$end;
	my $brk=$right;
	if($start>$end){$left=$end;$right=$start;}
	$left=$left-$range;
	$right=$right+$range;
	#print $chr,"\t",$start,"\t",$end,"\n";
	#print $chr,"\t",$left,"\t",$right,"\n";
	my $counter=0;
	my @bam_range = $bam -> get_features_by_location(-seq_id=>$chr,-start=>$left,-end=>$right);
	for my $aln (@bam_range) {
		my $aln_chr=$aln->seq_id;
		my $maln_chr=$aln->mate_seq_id;
		if($aln->isize > $size){next;}
		if($aln -> paired && !($aln->munmapped)){
			if($aln_chr eq $maln_chr && $aln->start <= $aln->mate_start){
				#if($aln->start <= $brk && $brk <= $aln->mate_end){
				if($aln->start <= $end-$min && $start+$min <= $aln->mate_end){
					my @info=($aln_chr,$aln->start,$aln->end,$aln->strand,$aln->length,
					$aln->isize,$maln_chr,$aln->mate_start,$aln->mate_end,$aln->mate_len,
					);
					#print join("\t",@info),"\n";
					$counter++;
				}
			}
		}	
	}
	print $line,"\t",$counter,"\n";
}
